:root {
    --primary: #FF9500;
    --primary-dark: #EE8400;
    --text: #000000;
    --text-secondary: #666666;
    --background: #F2F2F7;
    --surface: #FFFFFF;
    --surface-variant: #F9F9F9;
    --divider: #E5E5EA;
    --shadow: rgba(0, 0, 0, 0.1);
    --operator-bg: #FF9500;
    --operator-text: #FFFFFF;
    --function-bg: #D4D4D2;
    --function-text: #1C1C1E;
    --number-bg: #505050;
    --number-text: #FFFFFF;
}

[data-theme="dark"] {
    --primary: #FF9500;
    --primary-dark: #FFB340;
    --text: #FFFFFF;
    --text-secondary: #98989E;
    --background: #000000;
    --surface: #1C1C1E;
    --surface-variant: #2C2C2E;
    --divider: #38383A;
    --shadow: rgba(0, 0, 0, 0.3);
    --operator-bg: #FF9500;
    --operator-text: #FFFFFF;
    --function-bg: #505050;
    --function-text: #FFFFFF;
    --number-bg: #333333;
    --number-text: #FFFFFF;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', sans-serif;
    -webkit-tap-highlight-color: transparent;
    user-select: none;
}

body {
    background: var(--background);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all 0.3s ease;
}


.theme-toggle {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--surface);
    padding: 5px;
    border-radius: 20px;
    box-shadow: 0 4px 12px var(--shadow);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    cursor: move;
    user-select: none;
    touch-action: none;
    transition: box-shadow 0.2s ease;
    max-width: calc(100vw - 40px);
    max-height: calc(100vh - 40px);
    transform-origin: center center;
    -webkit-tap-highlight-color: transparent;
}


.theme-toggle::before {
    content: 'Drag me anywhere!ðŸ˜Š';
    position: absolute;
    top: -40px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--surface);
    color: var(--text);
    padding: 8px 16px;
    border-radius: 12px;
    font-size: 14px;
    font-weight: 500;
    white-space: nowrap;
    box-shadow: 0 4px 12px var(--shadow);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    pointer-events: none;
    z-index: 1001;
}

.theme-toggle::after {
    content: '';
    position: absolute;
    top: -8px;
    left: 50%;
    transform: translateX(-50%);
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    border-top: 8px solid var(--surface);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
}

.theme-toggle:hover::before,
.theme-toggle:hover::after {
    opacity: 1;
    visibility: visible;
}


.theme-toggle.hide-tooltip::before,
.theme-toggle.hide-tooltip::after {
    opacity: 0;
    visibility: hidden;
}

.theme-toggle.dragging {
    cursor: grabbing;
    box-shadow: 0 8px 24px var(--shadow);
    transform: scale(1.05);
    opacity: 0.9;
}

.theme-toggle button {
    width: 65px;
    height: 32px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 16px;
    border: none;
    cursor: pointer;
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
    -webkit-tap-highlight-color: transparent;
}

.theme-toggle button:active {
    transform: scale(0.95);
}

.theme-toggle button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 4px;
    width: 24px;
    height: 24px;
    background: var(--primary);
    border-radius: 50%;
    transform: translateY(-50%);
    transition: left 0.3s ease-in-out, background 0.3s ease-in-out;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}


[data-theme="dark"] .theme-toggle button {
    background: rgba(0, 0, 0, 0.2);
    box-shadow: inset 0 0 8px rgba(255, 255, 255, 0.2);
}

[data-theme="dark"] .theme-toggle button::before {
    left: calc(100% - 28px);
    background: var(--secondary);
}


.theme-toggle .light,
.theme-toggle .dark {
    position: absolute;
    top: 50%;
    font-size: 14px;
    transform: translateY(-50%);
    transition: opacity 0.3s ease-in-out;
}

.theme-toggle .light {
    right: 8px;
    opacity: 1;
}

.theme-toggle .dark {
    left: 8px;
    opacity: 0;
}

[data-theme="dark"] .theme-toggle .light {
    opacity: 0;
}

[data-theme="dark"] .theme-toggle .dark {
    opacity: 1;
}

.calculator {
    background: var(--surface);
    width: 100%;
    max-width: 380px;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 12px 30px var(--shadow);
}

.display-container {
    background: var(--surface);
    padding: 20px;
    height: 160px;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    position: relative;
}

.mode-indicator {
    display: flex;
    justify-content: space-between;
    color: var(--text-secondary);
    font-size: 14px;
    margin-bottom: 8px;
}

.history-display {
    min-height: 24px;
    color: var(--text-secondary);
    text-align: right;
    font-size: 20px;
    margin-bottom: 8px;
}

.display {
    width: 100%;
    border: none;
    font-size: 48px;
    font-weight: 300;
    text-align: right;
    background: transparent;
    color: var(--text);
    outline: none;
}

.tabs {
    display: flex;
    background: var(--surface-variant);
}

.tab-btn {
    flex: 1;
    padding: 16px;
    border: none;
    background: none;
    color: var(--text);
    font-size: 15px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
}

.tab-btn.active {
    color: var(--primary);
    background: var(--surface);
}

.buttons-container {
    position: relative;
    height: 420px;
}

.buttons {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    gap: 1px;
    background: var(--divider);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
}

.buttons.standard {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(6, 1fr);
}

.buttons.scientific {
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(5, 1fr);
}

.buttons.active {
    opacity: 1;
    visibility: visible;
}

button {
    border: none;
    border-radius: 8px;
    font-size: 24px;
    font-weight: 400;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    isolation: isolate;
}

/* Add pressed state styles */
button.pressed {
    transform: scale(0.95);
    filter: brightness(0.9);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
}

button.pressed::before {
    opacity: 0;
}

button.pressed::after {
    transform: translateX(100%);
    opacity: 0;
}

/* Special pressed effects for different button types */
.number-btn.pressed {
    background: var(--number-bg);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);
}

.operator-btn.pressed {
    background: var(--operator-bg);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);
}

.function-btn.pressed {
    background: var(--function-bg);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
}

.equals-btn.pressed {
    background: var(--operator-bg);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);
    transform: scale(0.95);
}

.memory-btn.pressed {
    background: var(--function-bg);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
}

.clear-btn.pressed {
    background: var(--function-bg);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
}

/* Dark theme specific pressed effects */
[data-theme="dark"] button.pressed {
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.4);
}

[data-theme="dark"] .number-btn.pressed {
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.5);
}

[data-theme="dark"] .operator-btn.pressed {
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.5);
}

[data-theme="dark"] .function-btn.pressed {
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.4);
}

[data-theme="dark"] .equals-btn.pressed {
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.5);
}

button::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at center, rgba(255, 255, 255, 0.2) 0%, transparent 70%);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 1;
    pointer-events: none;
}

button::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(45deg, transparent 0%, rgba(255, 255, 255, 0.1) 50%, transparent 100%);
    transform: translateX(-100%);
    transition: transform 0.6s ease;
    z-index: 2;
    pointer-events: none;
}

button:hover::before {
    opacity: 1;
}

button:hover::after {
    transform: translateX(100%);
}

button:active {
    transform: scale(0.95);
    transition: transform 0.1s ease;
}

button:active::before {
    opacity: 0;
}

button:active::after {
    transform: translateX(100%);
    opacity: 0;
}

/* Special hover effects for different button types */
.number-btn:hover {
    background: var(--number-bg);
    filter: brightness(1.2) contrast(1.1);
    box-shadow: 0 0 15px rgba(255, 255, 255, 0.2);
}

.number-btn:active {
    filter: none;
    box-shadow: none;
}

.operator-btn:hover {
    background: var(--operator-bg);
    filter: brightness(1.2) contrast(1.1);
    box-shadow: 0 0 20px rgba(255, 149, 0, 0.3);
}

.operator-btn:active {
    filter: none;
    box-shadow: none;
}

.function-btn:hover {
    background: var(--function-bg);
    filter: brightness(1.1) contrast(1.05);
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
}

.function-btn:active {
    filter: none;
    box-shadow: none;
}

.equals-btn:hover {
    background: var(--operator-bg);
    filter: brightness(1.2) contrast(1.1);
    box-shadow: 0 0 25px rgba(255, 149, 0, 0.4);
    transform: translateY(-2px);
}

.equals-btn:active {
    filter: none;
    box-shadow: none;
    transform: scale(0.95);
}

.memory-btn:hover {
    background: var(--function-bg);
    filter: brightness(1.1) contrast(1.05);
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
}

.memory-btn:active {
    filter: none;
    box-shadow: none;
}

.clear-btn:hover {
    background: var(--function-bg);
    filter: brightness(1.1) contrast(1.05);
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
}

.clear-btn:active {
    filter: none;
    box-shadow: none;
}

/* Dark theme specific hover effects */
[data-theme="dark"] button::before {
    background: radial-gradient(circle at center, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
}

[data-theme="dark"] button::after {
    background: linear-gradient(45deg, transparent 0%, rgba(255, 255, 255, 0.05) 50%, transparent 100%);
}

[data-theme="dark"] .number-btn:hover {
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.1);
}

[data-theme="dark"] .operator-btn:hover {
    box-shadow: 0 0 25px rgba(255, 149, 0, 0.4);
}

[data-theme="dark"] .function-btn:hover {
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.05);
}

[data-theme="dark"] .equals-btn:hover {
    box-shadow: 0 0 30px rgba(255, 149, 0, 0.5);
}

/* Mobile optimizations */
@media (max-width: 480px) {
    button::before,
    button::after {
        transition: all 0.2s ease;
        opacity: 0;
    }
    
    button:active::before {
        opacity: 0.5;
    }
    
    button:active::after {
        transform: translateX(50%);
        opacity: 0.3;
    }
    
    button:active {
        transform: scale(0.95);
        filter: brightness(0.9);
    }
    
    /* Remove hover effects on mobile */
    button:hover::before,
    button:hover::after {
        opacity: 0;
        transform: none;
    }
    
    /* Add touch feedback */
    button:active {
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
    }
    
    /* Optimize pressed state for mobile */
    button.pressed {
        transform: scale(0.95);
        filter: brightness(0.9);
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
        transition: all 0.1s ease;
    }
    
    /* Special pressed effects for different button types on mobile */
    .number-btn.pressed {
        background: var(--number-bg);
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);
    }
    
    .operator-btn.pressed {
        background: var(--operator-bg);
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);
    }
    
    .function-btn.pressed {
        background: var(--function-bg);
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
    }
    
    .equals-btn.pressed {
        background: var(--operator-bg);
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);
        transform: scale(0.95);
    }
    
    /* Dark theme specific pressed effects for mobile */
    [data-theme="dark"] button.pressed {
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.4);
    }
    
    [data-theme="dark"] .number-btn.pressed {
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.5);
    }
    
    [data-theme="dark"] .operator-btn.pressed {
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.5);
    }
    
    [data-theme="dark"] .function-btn.pressed {
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.4);
    }
    
    [data-theme="dark"] .equals-btn.pressed {
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.5);
    }
}

/* Small mobile devices */
@media (max-width: 360px) {
    button::before,
    button::after {
        transition: all 0.15s ease;
    }
    
    button:active {
        transform: scale(0.98);
    }
    
    button.pressed {
        transform: scale(0.98);
    }
}

.number-btn {
    background: var(--number-bg);
    color: var(--number-text);
    font-size: 28px;
}

.operator-btn {
    background: var(--operator-bg);
    color: var(--operator-text);
    font-size: 28px;
}

.function-btn {
    background: var(--function-bg);
    color: var(--function-text);
    font-size: 22px;
}

.memory-btn {
    background: var(--function-bg);
    color: var(--function-text);
    font-size: 18px;
    font-weight: 500;
}

.mode-btn {
    background: var(--function-bg);
    color: var(--function-text);
    font-size: 18px;
    font-weight: 500;
}

.equals-btn {
    background: var(--operator-bg);
    color: var(--operator-text);
    font-size: 32px;
}

.memory-notification {
    position:fixed;
    top: 1px;
    left: 50%;
    transform: translateX(-50%);
    background: white;
    color: #000000;
    padding: 20px 20px 20px 20px;
    border-radius: 30px;
    font-size: 15px;
    font-weight: bold;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    z-index: 1000;
    box-shadow: 0 8px 32px white;
    border: 1px solid cyan;
    position: relative;
    overflow: hidden;
    text-align: center;
    max-width: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.memory-notification::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.2),
        transparent
    );
    animation: shine 3s infinite;
}

.memory-notification::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 30px;
    padding: 2px;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.1));
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
}

@keyframes fadeInOut {
    0% { 
        opacity: 0; 
        transform: translate(-50%, -30px) scale(0.95);
    }
    20% { 
        opacity: 1; 
        transform: translate(-50%, 0) scale(1);
    }
    80% { 
        opacity: 1; 
        transform: translate(-50%, 0) scale(1);
    }
    100% { 
        opacity: 0; 
        transform: translate(-50%, -30px) scale(0.95);
    }
}

@keyframes shine {
    0% {
        left: -100%;
    }
    20%, 100% {
        left: 100%;
    }
}

/* Dark theme specific notification */
[data-theme="dark"] .memory-notification {
    background: transparent black;
    box-shadow: 0 8px 32px whitesmoke;
    border: 1px solid cyan;
}

/* Mobile optimizations */
@media (max-width: 480px) {
    .memory-notification {
        padding: 15px 20px;
        font-size: 14px;
        border-radius: 25px;
        min-width: 180px;
        top: 15px;
    }
    
    .memory-notification::after {
        border-radius: 25px;
    }
}

@media (max-width: 360px) {
    .memory-notification {
        padding: 8px 20px;
        font-size: 13px;
        border-radius: 20px;
        min-width: 160px;
        top: 10px;
    }
    
    .memory-notification::after {
        border-radius: 20px;
    }
}

@media (min-width: 481px) and (max-width: 768px) {
    .calculator {
        max-width: 90%;
    }
    
    .display-container {
        height: 180px;
    }
    
    .display {
        font-size: 44px;
    }
    
    .history-display {
        font-size: 22px;
    }
    
    .number-btn,
    .operator-btn {
        font-size: 26px;
    }
    
    .function-btn {
        font-size: 20px;
    }
    
    .memory-btn,
    .mode-btn {
        font-size: 16px;
    }
    
    .equals-btn {
        font-size: 30px;
    }
}

@media (min-width: 769px) and (max-width: 1024px) {
    .calculator {
        max-width: 400px;
    }
    
    .display-container {
        height: 170px;
    }
    
    .display {
        font-size: 46px;
    }
    
    .history-display {
        font-size: 23px;
    }
    
    .number-btn,
    .operator-btn {
        font-size: 27px;
    }
    
    .function-btn {
        font-size: 21px;
    }
    
    .memory-btn,
    .mode-btn {
        font-size: 17px;
    }
    
    .equals-btn {
        font-size: 31px;
    }
}

@media (min-width: 1025px) {
    .calculator {
        max-width: 380px;
    }
}

@keyframes slideIn {
    from {
        transform: translateY(20px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.calculator {
    animation: slideIn 0.3s ease-out;
}

.github-link {
    display: flex;
    align-items: center;
    gap: 2px;
    text-decoration: none;
    color: var(--text-secondary);
    font-size: 14px;
    font-weight: bold;
    padding: 4px 4px;
    border-radius: 6px;
    transition: all 0.2s ease;
}

.github-link:hover {
    background: var(--surface-variant);
    color: var(--primary);
}

.github-link .octicon {
    fill: currentColor;
}

.github-link span {
    line-height: 3;
}

.buttons.converter {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    padding: 25px;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05));
    display: none;
    height: 100%;
    position: relative;
    overflow: visible;
}

.buttons.converter::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at top right, rgba(255, 149, 0, 0.15), transparent 70%),
                radial-gradient(circle at bottom left, rgba(255, 149, 0, 0.15), transparent 70%);
    pointer-events: none;
}

.buttons.converter.active {
    display: block;
    animation: fadeScale 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.converter-wrapper {
    display: flex;
    flex-direction: column;
    height: 100%;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 30px;
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    border: 1px solid rgba(255, 255, 255, 0.18);
    position: relative;
    overflow: visible;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.converter-wrapper:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 40px 0 rgba(31, 38, 135, 0.2);
}

.converter-header {
    padding: 25px 25px 15px;
    position: relative;
    z-index: 1;
}

.converter-type {
    width: 100%;
    padding: 15px 20px;
    border: none;
    border-radius: 16px;
    background: var(--surface-variant);
    color: var(--text);
    font-size: 18px;
    font-weight: 600;
    cursor: pointer;
    outline: none;
    box-shadow: 0 4px 15px var(--shadow);
    transition: all 0.3s ease;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 15px center;
    background-size: 16px;
}

.converter-type:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px var(--shadow);
}

.converter-main {
    flex: 1;
    padding: 20px 25px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 20px;
}

.converter-inputs {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.converter-input-group {
    display: grid;
    grid-template-columns: 2.5fr 1.5fr;
    gap: 15px;
    align-items: center;
    transition: transform 0.3s ease;
}

.converter-input-group:hover {
    transform: translateX(5px);
}

.converter-value,
.converter-result {
    width: 100%;
    padding: 15px 20px;
    border: 2px solid transparent;
    border-radius: 16px;
    background: var(--surface-variant);
    color: var(--text);
    font-size: 20px;
    font-weight: 500;
    text-align: right;
    outline: none;
    box-shadow: 0 4px 15px var(--shadow);
    transition: all 0.3s ease;
}

.converter-value:focus {
    border-color: var(--primary);
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(255, 149, 0, 0.2);
}

.converter-from,
.converter-to {
    width: 100%;
    padding: 15px 20px;
    border: none;
    border-radius: 16px;
    background: var(--surface-variant);
    color: var(--text);
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    outline: none;
    box-shadow: 0 4px 15px var(--shadow);
    transition: all 0.3s ease;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 15px center;
    background-size: 16px;
}

.converter-from:hover,
.converter-to:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px var(--shadow);
}

.converter-swap {
    width: 50px;
    height: 50px;
    border: none;
    border-radius: 50%;
    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
    color: var(--operator-text);
    font-size: 22px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 4px 15px rgba(255, 149, 0, 0.3);
    position: relative;
    overflow: hidden;
}

.converter-swap::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.6s ease, height 0.6s ease;
}

.converter-swap:hover::before {
    width: 300px;
    height: 300px;
}

.converter-swap:hover {
    transform: rotate(180deg) scale(1.1);
    box-shadow: 0 6px 20px rgba(255, 149, 0, 0.4);
}

.converter-buttons {
    padding: 15px 20px 20px;
    display: flex;
    gap: 15px;
 
    position: relative;
    z-index: 10;
}

.converter-clear,
.converter-copy {
    flex: 1;
    height: 50px;
    padding: 0;
    border: none;
    border-radius: 16px;
    background: var(--surface-variant);
    color: var(--text);
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px var(--shadow);
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    
}

@media (max-width: 480px) {
    .converter-buttons {
        padding: 10px 15px 15px;
    }
    
    .converter-clear,
    .converter-copy {
        height: 45px;
        font-size: 15px;
    }
}

@media (max-width: 360px) {
    .converter-buttons {
        padding: 8px 12px 12px;
    }
    
    .converter-clear,
    .converter-copy {
        height: 40px;
        font-size: 14px;
    }
}

.converter-type option,
.converter-from option,
.converter-to option {
    background: var(--surface);
    color: var(--text);
    padding: 10px;
}

[data-theme="dark"] .converter-type option,
[data-theme="dark"] .converter-from option,
[data-theme="dark"] .converter-to option {
    background: var(--surface);
    color: var(--text);
}